{"version":3,"file":"718.ac925c11.js","mappings":"0NACA,SAAgB,gBAAgB,wB,kCC+BnBA,EAAc,IA9BH,WACtB,SAAAC,EAAYC,IAAOC,EAAAA,EAAAA,GAAA,KAAAF,GACjBG,KAAKC,aAAeH,CACtB,CAwBC,OAxBAI,EAAAA,EAAAA,GAAAL,EAAA,EAAAM,IAAA,UAAAC,MAED,SAAQC,GAAU,IAAAC,EAAA,KACVC,EAAM,IAAIC,IAAI,gCAADC,OAAiCJ,IAE9CP,EAAQE,KAAKC,aAAaS,SAASH,GAEzC,OAAa,MAATT,EACKa,QAAQC,QAAQd,GAGlBe,MAAMN,GACVO,MAAK,SAACC,GACL,GAAIA,EAAIC,GACN,OAAOD,EAAIE,OAGb,MAAMF,CACR,IACCD,MAAK,SAACI,GAGL,OAFAZ,EAAKL,aAAakB,SAASZ,EAAIa,WAAYF,GAEpCA,CACT,GACJ,KAACrB,CAAA,CA3BqB,GA8BG,CAAgBI,EAAAA,G,8kBCrB5B,SAASoB,IACtB,IAAAC,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAiCC,EAAAA,EAAAA,GAAAH,EAAA,GAArB,GACbI,GAAWC,EAAAA,EAAAA,MAEXC,EAAUJ,EAAaK,IAAI,WAC3BC,EAAUN,EAAaK,IAAI,WAEjCE,GAAsCC,EAAAA,EAAAA,YAAUC,GAAAR,EAAAA,EAAAA,GAAAM,EAAA,GAAzCG,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAsCJ,EAAAA,EAAAA,YAAUK,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAzCE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAE5BG,IAAUN,KAAiBI,EAwBjC,OAtBAG,EAAAA,EAAAA,YAAU,WACHb,GAAYE,GACfJ,EAAS,UAEb,GAAG,CAACE,EAASE,KAEbW,EAAAA,EAAAA,YAAU,WACR9B,QAAQ+B,IAAI,CACV9C,EAAY+C,QAAQf,GACpBhC,EAAY+C,QAAQb,KACnBhB,MAAK,SAAA8B,GAAsC,IAAAC,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAApCE,EAAcD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAAS,UAETF,EAAeG,aAAeF,EAAeE,eAC/CD,EAAS,WAGXb,EAAce,EAAAA,EAAC,CAAC,EAAIJ,GAAc,IAAEK,IAAgB,YAAXH,KACzCT,EAAcW,EAAAA,EAAC,CAAC,EAAIH,GAAc,IAAEI,IAAgB,YAAXH,IAC3C,GACF,GAAG,CAACpB,EAASE,IAGXU,IACEY,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,iBAAwBC,SAAA,EACtCC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAAAF,UACLH,EAAAA,EAAAA,MAACM,EAAAA,EAAG,CAAAH,SAAA,EACFC,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CACFC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,UAC1CC,GAAI,GACJC,GAAI,GAAGT,UAEPC,EAAAA,EAAAA,KAACS,EAAAA,GAAK,CAACC,OAAQhC,OAEjBsB,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CACFC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,UAC1CC,GAAI,GACJC,GAAI,GAAGT,UAEPC,EAAAA,EAAAA,KAACS,EAAAA,GAAK,CAACC,OAAQ5B,YAIrBkB,EAAAA,EAAAA,KAACW,EAAAA,GAAM,CACLC,QAAS,WACP1C,EAAS,UACX,EAAE6B,SACH,YAMT,C","sources":["webpack://lf-training/./src/app/pages/battle-result.module.scss?c186","webpack://lf-training/./src/app/pages/user.service.js","webpack://lf-training/./src/app/pages/battle-result.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"battle-result\":\"ug0fAoFaWE0OrtmSmJtn\"};","import { cacheService } from \"./cache.service\";\n\nexport class UserService {\n  constructor(cache) {\n    this.cacheService = cache;\n  }\n\n  getUser(username) {\n    const url = new URL(`https://api.github.com/users/${username}`);\n\n    const cache = this.cacheService.getCache(url);\n\n    if (cache != null) {\n      return Promise.resolve(cache);\n    }\n\n    return fetch(url)\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        throw res;\n      })\n      .then((data) => {\n        this.cacheService.setCache(url.toString(), data);\n\n        return data;\n      });\n  }\n}\n\nexport const userService = new UserService(cacheService);\n","import { Col, Row } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\n\nimport { Button, Panel, Panels } from \"@/components\";\n\nimport styles from \"./battle-result.module.scss\";\nimport { userService } from \"./user.service\";\n\n// https://api.github.com/users/maroon1\n\nexport default function BattleResult() {\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n\n  const player1 = searchParams.get(\"player1\");\n  const player2 = searchParams.get(\"player2\");\n\n  const [player1Info, setPlayer1Info] = useState();\n  const [player2Info, setPlayer2Info] = useState();\n\n  const ready = !!player1Info && !!player2Info;\n\n  useEffect(() => {\n    if (!player1 || !player2) {\n      navigate(\"/battle\");\n    }\n  }, [player1, player2]);\n\n  useEffect(() => {\n    Promise.all([\n      userService.getUser(player1),\n      userService.getUser(player2),\n    ]).then(([newPlayer1Info, newPlayer2Info]) => {\n      let winner = \"player1\";\n\n      if (newPlayer1Info.public_repos < newPlayer2Info.public_repos) {\n        winner = \"player2\";\n      }\n\n      setPlayer1Info({ ...newPlayer1Info, win: winner === \"player1\" });\n      setPlayer2Info({ ...newPlayer2Info, win: winner === \"player2\" });\n    });\n  }, [player1, player2]);\n\n  return (\n    ready && (\n      <div className={styles[\"battle-result\"]}>\n        <Panels>\n          <Row>\n            <Col\n              style={{ display: \"flex\", justifyContent: \"center\" }}\n              sm={12}\n              xs={24}\n            >\n              <Panel player={player1Info} />\n            </Col>\n            <Col\n              style={{ display: \"flex\", justifyContent: \"center\" }}\n              sm={12}\n              xs={24}\n            >\n              <Panel player={player2Info} />\n            </Col>\n          </Row>\n        </Panels>\n        <Button\n          onClick={() => {\n            navigate(\"/battle\");\n          }}\n        >\n          RESET\n        </Button>\n      </div>\n    )\n  );\n}\n"],"names":["userService","UserService","cache","_classCallCheck","this","cacheService","_createClass","key","value","username","_this","url","URL","concat","getCache","Promise","resolve","fetch","then","res","ok","json","data","setCache","toString","BattleResult","_useSearchParams","useSearchParams","searchParams","_slicedToArray","navigate","useNavigate","player1","get","player2","_useState","useState","_useState2","player1Info","setPlayer1Info","_useState3","_useState4","player2Info","setPlayer2Info","ready","useEffect","all","getUser","_ref","_ref2","newPlayer1Info","newPlayer2Info","winner","public_repos","_objectSpread","win","_jsxs","className","styles","children","_jsx","Panels","Row","Col","style","display","justifyContent","sm","xs","Panel","player","Button","onClick"],"sourceRoot":""}